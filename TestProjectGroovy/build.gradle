import io.github.liplum.mindustry.AntiAlias

plugins {
    id 'java'
    id "io.github.liplum.mgpp" version "2.0.0"
}
group 'plumy.test'
version '0.1'

repositories {
    mindustryRepo()
    mavenCentral()
}
sourceSets {
    main {
        java.srcDirs('src')
        resources.srcDir('resources')
    }
    test {
        java.srcDir('test')
        resources.srcDir('resources')
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    importMindustry()
}

mindustry {
    dependency {
        mindustry version: "v146"
        // mindustryMirror version: latest
        arc version: "v146"
    }
    modMeta {
        name = 'mgpp-groovy'
        displayName = 'MGPP Groovy Test'
    }
    meta.version = 'groovy 3000'
    meta.minGameVersion = '136'
}
deployMod {
    baseName = 'TestGroovyMod'
    version = '3.14159'
}
runMindustry {
    addModpack {
        // default modpack
        jvm repo: "liplum/CyberIO"
        json repo: "BlueWolf3682/Exotic-Mod", branch: "master"
    }
    def modpack2nd = addModpack("number 2") {
        json repo: "sk7725/TimeControl"
    }
    addModpack("for debugging") {
        testingUtilities
        informatis
    }
    addClient {
        // anonymous 1
        official version: "v146"
    }
    addClient("debugging") {
        official version: "v146"
        useModpack "for debugging"
    }
    addClient("custom data dir") {
        official version: "v146"
        putDataAt "${buildDir}/customDataDir"
    }
    addClient("inline modpack") {
        official version: "v146"
        useModpack {
            it
            it.testingUtilities
            it.jvm repo: "liplum/CyberIO"
        }
    }
    addClient {
        // anonymous 2
        fooClient tag: "v8.0.0", file: "erekir-client.jar"
        useModpack modpack2nd
    }
    addClient("Old Mindustry") {
        official version: "v126"
    }
    addClient("latest") {
        official latest
    }
    addServer {
        official version: "v146"
    }
}
dexJar {
    options.minApi = '26'
    options {
        minApi = '14'
    }
}
mindustryAssets {
    assets.from("$rootDir/assets")
}
tasks.register('antiAlias', AntiAlias) {
    sourceDirectory.set(new File(rootDir, 'assets/sprites'))
    destinationDirectory.set(new File(rootDir, 'AA'))
    addFilter {
        it.name != 'sender.png'
    }
    //incremental is default
    //options.isIncremental = false
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}