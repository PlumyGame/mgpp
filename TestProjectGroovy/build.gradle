plugins {
    id 'java'
    id "io.github.liplum.mgpp" version "1.3.0"
}
group 'plumy.test'
version '0.1'

repositories {
    mindustryRepo()
    mavenCentral()
}
sourceSets {
    main {
        java.srcDirs('src')
        resources.srcDir('resources')
    }
    test {
        java.srcDir('test')
        resources.srcDir('resources')
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    importMindustry()
}

mindustry {
    dependency {
        //mindustry version: 'v136'
        mindustryMirror version: 'v141.2'
        // mindustryMirror version: latest
        arc version: 'v141.3'
    }
    client {
        official version: 'v141.3'
        //be version: latest named 'Test.jar'
        /*
        from GameLocation(
            'mindustry-antigrief',
            'mindustry-client',
            'v8.0.0',
            'erekir-client.jar'
        )
        */
        // fromLocal "F:/Mindustry/Mindustry-BE-Desktop-22799.jar" named "22799.jar"
        // from localProperties
        // be version: '22714'
        // `clearUp` as default, it will delete other versions when download a new one
        // `keepOthers` will keep them
    }
    server {
        official version: 'v141.3'

        // be version: '22714'
    }
    mods {
        worksWith {
            github 'liplum/cyberio'
        }
    }
    run {
        // set Mindustry's data directory to "./temp"
        //dataDir = 'temp'
    }
    meta << ModMeta(
        name: 'mgpp-groovy',
        displayName: 'MGPP Groovy Test',
    )
    meta.version = 'groovy 3000'
    meta.minGameVersion = '136'
    deploy {
        baseName = 'TestGroovyMod'
        version = '3.14159'
        // fatJar is default option unless you use another tool like shadowJar
        fatJar
    }
}
dexJar {
    options.minApi = '26'
    options {
        minApi = '14'
    }
}
mindustryAssets {
    rootAt "$rootDir/assets"
    // There is no need to create a batch, if you use `rootAt 'foo/bar'`.
    /*sprites {
        dir = new File(rootDir, "assets/sprites")
        genClass // noGenClass is default
    }*/
}
antiAlias {
    sourceDirectory = new File(rootDir, 'assets/sprites')
    destinationDirectory = new File(rootDir, 'AA')
    addFilter {
        it.name != 'sender.png'
    }
    //incremental is default
    //options.isIncremental = false
}

test {
    useJUnitPlatform()
}